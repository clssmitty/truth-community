{
  "version": 3,
  "sources": ["../../lib/api.ts"],
  "sourcesContent": ["import fs from 'fs'\nimport { join } from 'path'\nimport matter from 'gray-matter'\n\nconst postsDirectory = join(process.cwd(), '_posts')\n\nexport function getPostSlugs() {\n  return fs.readdirSync(postsDirectory)\n}\n\nexport function getPostBySlug(slug: string, fields: string[] = []) {\n  const realSlug = slug.replace(/\\.md$/, '')\n  const fullPath = join(postsDirectory, `${realSlug}.md`)\n  const fileContents = fs.readFileSync(fullPath, 'utf8')\n  const { data, content } = matter(fileContents)\n\n  type Items = {\n    [key: string]: string\n  }\n\n  const items: Items = {}\n\n  // Ensure only the minimal needed data is exposed\n  fields.forEach((field) => {\n    if (field === 'slug') {\n      items[field] = realSlug\n    }\n    if (field === 'content') {\n      items[field] = content\n    }\n\n    if (typeof data[field] !== 'undefined') {\n      items[field] = data[field]\n    }\n  })\n\n  return items\n}\n\nexport function getAllPosts(fields: string[] = []) {\n  const slugs = getPostSlugs()\n  const posts = slugs\n    .map((slug) => getPostBySlug(slug, fields))\n    // sort posts by date in descending order\n    .sort((post1, post2) => (post1.date > post2.date ? -1 : 1))\n  return posts\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAe;AACf,kBAAqB;AACrB,yBAAmB;AAEnB,MAAM,iBAAiB,sBAAK,QAAQ,OAAO;AAEpC,wBAAwB;AAC7B,SAAO,kBAAG,YAAY;AAAA;AAGjB,uBAAuB,MAAc,SAAmB,IAAI;AACjE,QAAM,WAAW,KAAK,QAAQ,SAAS;AACvC,QAAM,WAAW,sBAAK,gBAAgB,GAAG;AACzC,QAAM,eAAe,kBAAG,aAAa,UAAU;AAC/C,QAAM,EAAE,MAAM,YAAY,gCAAO;AAMjC,QAAM,QAAe;AAGrB,SAAO,QAAQ,CAAC,UAAU;AACxB,QAAI,UAAU,QAAQ;AACpB,YAAM,SAAS;AAAA;AAEjB,QAAI,UAAU,WAAW;AACvB,YAAM,SAAS;AAAA;AAGjB,QAAI,OAAO,KAAK,WAAW,aAAa;AACtC,YAAM,SAAS,KAAK;AAAA;AAAA;AAIxB,SAAO;AAAA;AAGF,qBAAqB,SAAmB,IAAI;AACjD,QAAM,QAAQ;AACd,QAAM,QAAQ,MACX,IAAI,CAAC,SAAS,cAAc,MAAM,SAElC,KAAK,CAAC,OAAO,UAAW,MAAM,OAAO,MAAM,OAAO,KAAK;AAC1D,SAAO;AAAA;",
  "names": []
}
